# ===== Nerdtree settings =====
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let NERDTreeShowHidden = 1
function MyNerdToggle()
  if &filetype == 'nerdtree' || &filetype == ''
    :NERDTreeToggle
  else
    :NERDTreeFind
  endif

  "Refresh automatically
  exe 'silent normal R'
endfunction

nnoremap <silent> <space>b :call MyNerdToggle()<CR>
let g:NERDTreeLimitedSyntax = 1
let g:NERDTreeMapOpenVSplit = 'v'
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenInTab = 'e'
let g:NERDTreeMapOpenExpl = ''
let g:NERDTreeQuitOnOpen = 1
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
" ===== CocList =====
noremap [fzf] <Nop>
map s [fzf]

" Show all diagnostics
nnoremap <silent> <space>a  :<C-u>CocList diagnostics<CR>

" Manage extensions
nnoremap <silent> <space>e  :<C-u>CocList extensions<CR>

" Yank
nnoremap <silent> <space>y     :<C-u>CocList -A --normal yank<CR>

" Find symbol of current document
nnoremap <silent> [fzf]o  :<C-u>CocList -A outline<CR>

" Search workspace symbols
nnoremap <silent> [fzf]w  :<C-u>CocList -A -I symbols<CR>

" Search workspace symbols
nnoremap <silent> [fzf]g  :<C-u>CocList -A -I grep<CR>

" Grep current word
nnoremap <silent> [fzf]s  :exe 'CocList -A -I --input='.expand('<cword>').' grep'<CR>

" File ( Search from project root )
nnoremap <silent> [fzf]p  :<C-u>Files<CR>

" File ( Search from current dir )
let g:vim_open_path = getcwd()
nnoremap <silent> [fzf]c  :exe 'CocList --input=' . fnamemodify(g:vim_open_path, ':t') . '/' . ' files'<CR>

" Error Occured File ( Search from current dir )
nnoremap <silent> [fzf]e :<C-u>CocList diagnostics<CR>

" Mru
nnoremap <silent> [fzf]y  :<C-u>CocList mru<CR>

" Buffer
nnoremap <silent> [fzf]b  :<C-u>CocList buffers<CR>

" help vim
nnoremap <silent> [fzf]h  :<C-u>CocList helptags<CR>

'''
